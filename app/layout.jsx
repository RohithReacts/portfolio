import { Geist, Geist_Mono } from "next/font/google";
import "@radix-ui/themes/styles.css";
import "./globals.css";
import { ThemeProvider } from "../components/theme/theme-provider";
import { Header } from "../components/templates/header";
import { Footer } from "../components/templates/footer";
import { Suspense } from "react";
import Loading from "./loading";
import NextTopLoader from "nextjs-toploader";
import {  Theme } from "@radix-ui/themes";
import ScrollToTop from "@/components/top";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const viewport = {
  width: 'device-width',
  initialScale: 1,
  themeColor: '#ffffff',
}

export const metadata = {
  title: "Portfolio",
  description: "Generated by rohithreacts next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
       
          <NextTopLoader
            color="#FFBF00"
            initialPosition={0.08}
            crawlSpeed={200}
            height={3}
            crawl={true}
            showSpinner={true}
            easing="ease"
            speed={200}
            shadow="0 0 10px #2299DD,0 0 5px #2299DD"
            template='<div class="bar" role="bar"><div class="peg"></div></div> 
  <div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'
            zIndex={1600}
            showAtBottom={false}
          />
          <Theme>
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem={true}
               storageKey="theme"
      
              
            >
              <div className="flex min-h-screen w-full flex-col font-[family-name:var(--font-inter-tight)]">
                <div className="relative mx-auto w-full w-screen-xl flex-1 px-4 pt-20">
                  <Header />
                  <Suspense fallback={<Loading />}>{children}</Suspense>
<ScrollToTop />
                  <Footer />
                </div>
              </div>
            </ThemeProvider>
          </Theme>
      </body>
    </html>
  );
}
